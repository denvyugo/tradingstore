import json
import os
from enum import IntEnum
# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å emoji –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–º–æ–¥–∂–∏
from emoji import emojize

# –Ω–∞–∑–≤–∞–Ω–∏–µ –ë–î
NAME_DB = 'products.db'
# –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
VERSION = '1.1.0'
# –∞–≤—Ç–æ—Ä –ø—Ä–∏–ª–æ–∂–Ω–∏—è
AUTHOR = 'Zveryaka A.'

BASE_DIR = os.path.dirname(os.path.abspath(__file__)) # Base folder
DATABASE = os.path.join('sqlite:///'+BASE_DIR, NAME_DB) # Path to DB
INVOICES_FOLDER = 'invoices' # folder for invoices

def invoices_folder():
    invoices_path, _ = os.path.split(BASE_DIR)
    invoices_path = os.path.join(invoices_path, INVOICES_FOLDER)
    if not os.path.isdir(invoices_path):
        os.mkdir(invoices_path)
    return invoices_path

# —Ç–æ–∫–µ–Ω –≤—ã–¥–∞–µ—Ç—Å—è –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —Ö—Ä–∞–Ω–∏–º –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–∞–π–ª–µ
def get_token():
    with open(os.path.join(BASE_DIR, 'token.txt'), 'r') as file:
        token, _ = file.readline().split(sep=';')
    return token.split(sep=' = ')[1].replace("'", '')

def get_email_config():
    email_config = {}
    with open(os.path.join(BASE_DIR, '.env'), 'r') as file:
        for line in file:
            key, value = line.split(sep=' = ')
            email_config[key] = value.replace('\n', '')
    return email_config

TOKEN = get_token()
DIALOG = os.path.join(BASE_DIR, 'dialog')
COMPANY_INFO = os.path.join(BASE_DIR, 'company.json')

def is_company_info():
    """
    check if company info json file exists
    :return True: if company info json file exists, False: otherwise
    """
    return os.path.exists(COMPANY_INFO)

def company_info():
    """
    get dict from company info json file
    :return info: dict of company info
    """
    with open(COMPANY_INFO, mode='r') as file_obj:
        info = json.load(file_obj)
    return info

COUNT = 0

# Keyboard buttons for common and trader user
KEYBOARD = {
    'CHOOSE_ORDER': '–í—ã–±—Ä–∞—Ç—å –∑–∞–∫–∞–∑',
    'CHOOSE_GOODS': emojize(':open_file_folder: –í—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä'),
    'INFO': emojize(':speech_balloon: TradingStore'),
    'SETTINGS': emojize('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏'),
    'SEMIPRODUCT': emojize(':pizza: –ü–æ–ª—É—Ñ–∞–±—Ä–∏–∫–∞—Ç—ã'),
    'GROCERY': emojize(':bread: –ë–∞–∫–∞–ª–µ—è'),
    'ICE_CREAM': emojize(':shaved_ice: –ú–æ—Ä–æ–∂–µ–Ω–æ–µ'),
    '<<': emojize('‚è™'),
    '>>': emojize('‚è©'),
    'BACK_STEP': emojize('‚óÄÔ∏è'),
    'NEXT_STEP': emojize('‚ñ∂Ô∏è'),
    'ORDER': emojize('‚úÖ –ó–ê–ö–ê–ó'),
    'X': emojize('‚ùå'),
    'DOWN': emojize('üîΩ'),
    'AMOUNT_PRODUCT': COUNT,
    'AMOUNT_ORDERS': COUNT,
    'UP': emojize('üîº'),
    'APPLY': '‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑',
    'COPY': '¬©Ô∏è'
}
# Keyboard for default user (get role)
DEFAULT = {
    'TRADER': 'Trader',
    'KEEPER': 'Keeper',
    'ADMIN': 'Admin'
}

# Keyboard for keeper
KEEPER = {
    'GET_ORDERS': '–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤'
}

# Keyboard for administrator
ADMINISTRATIVE = {
    'MAIN': '–í –Ω–∞—á–∞–ª–æ',
    'PROPERTY': '–†–µ–∫–≤–∏–∑–∏—Ç—ã',
    'STORE': '–°–∫–ª–∞–¥',
    'PROPERTY_CHANGE': '–ò–∑–º–µ–Ω–∏—Ç—å',
    'PROPERTY_ADD': '–î–æ–±–∞–≤–∏—Ç—å'
}

# Id category to products
CATEGORY = {
    'SEMIPRODUCT': 1,
    'GROCERY': 2,
    'ICE_CREAM': 3,
}

# name commands
COMMANDS = {
    'START': "start",
    'HELP': "help",
}


# Roles of users
class Role(IntEnum):
    Trader = 1
    Keeper = 2
    Admin = 3

# hash for default password for each roles
DEFAULT_TRADER = b'e6abfb67407de540f6e9385892fe20f35d56c47ef5bcf9aae8b12b1f6b7078d1'
DEFAULT_KEEPER = b'21c0e9cd6dd58086d61d9682524d47b933ded967c99a61eb5321e2ebd4439319'
DEFAULT_ADMIN = b'd29451272bec641a9a9628742a8629e877a551220a2c839b7d43398d2c370ffa'

# Order's Status
class Status(IntEnum):
    New = 0
    Work = 1
    Complete = 2
    Done = 3
    Cancel = 4
    Canceled = 5


# Dialog state
class DialogState(IntEnum):
    NoDialog = 0
    CompanyName = 1
    CompanyTaxpayer = 2
    CompanyRegistrationID = 3
    CompanyAddress = 4
    CompanyPhone = 5
    CompanyEmail = 6
    BankAccountName = 7
    BankAccountID = 8
    BankAccountAccount = 9
    BankAccountCorrespondent = 10
    StoreAddress = 11
    StoreLongitude = 12
    StoreLatitude = 13
    StoreTitle = 14
    StoreDeliveryPrice = 15
    UserTrader = 16
    UserKeeper = 17
    UserAdmin = 18

dialog_state_name = {
    DialogState.CompanyName: '–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏',
    DialogState.CompanyTaxpayer: '–ò–ù–ù –∫–æ–º–ø–∞–Ω–∏–∏',
    DialogState.CompanyRegistrationID: '–ö–ü–ü –∫–æ–º–ø–∞–Ω–∏–∏',
    DialogState.CompanyAddress: '–∞–¥—Ä–µ—Å –∫–æ–º–ø–∞–Ω–∏–∏',
    DialogState.CompanyPhone: '—Ç–µ–ª–µ—Ñ–æ–Ω –∫–æ–º–ø–∞–Ω–∏–∏',
    DialogState.CompanyEmail: '—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å –∫–æ–º–ø–∞–Ω–∏–∏',
    DialogState.BankAccountName: '–Ω–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞ –∫–æ–º–ø–∞–Ω–∏–∏',
    DialogState.BankAccountID: '–ë–ò–ö –±–∞–Ω–∫–∞ –∫–æ–º–ø–∞–Ω–∏–∏',
    DialogState.BankAccountAccount: '–Ω–æ–º–µ—Ä —Ä–∞—Å—á—ë—Ç–Ω–æ–≥–æ —Å—á—ë—Ç–∞ –∫–æ–º–∞–Ω–∏–∏',
    DialogState.BankAccountCorrespondent: '–Ω–æ–º–µ—Ä –∫–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç—Å–∫–æ–≥–æ —Å—á—ë—Ç–∞ –∫–æ–º–ø–∞–Ω–∏–∏',
    DialogState.StoreAddress: '–∞–¥—Ä–µ—Å —Å–∫–ª–∞–¥–∞',
    DialogState.StoreLongitude: '–¥–æ–ª–≥–æ—Ç–∞ (–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å–∫–ª–∞–¥–∞)',
    DialogState.StoreLatitude: '—à–∏—Ä–æ—Ç–∞ (–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å–∫–ª–∞–¥–∞)',
    DialogState.StoreTitle: '–Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞',
    DialogState.StoreDeliveryPrice: '—Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –∑–∞ –∫–º',
    DialogState.UserTrader: '–ø–∞—Ä–æ–ª—å –¥–ª—è —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è',
    DialogState.UserKeeper: '–ø–∞—Ä–æ–ª—å –¥–ª—è —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ —Å–∫–ª–∞–¥–∞',
    DialogState.UserAdmin: '–ø–∞—Ä–æ–ª—å –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'
}
